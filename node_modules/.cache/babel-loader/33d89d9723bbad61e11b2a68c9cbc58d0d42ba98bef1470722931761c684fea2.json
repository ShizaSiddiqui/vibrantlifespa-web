{"ast":null,"code":"var _jsxFileName = \"/Users/shiza/bookingflowlatest/src/components/BookingDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\nimport confetti from \"canvas-confetti\";\nimport SignIn from \"./Signin.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function BookingDisplayMain() {\n  _s();\n  const [isFirstVisit, setIsFirstVisit] = useState(null);\n  const [selectedProcedure, setSelectedProcedure] = useState(\"\");\n  const [selectedAesthetician, setSelectedAesthetician] = useState(\"\");\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedTime, setSelectedTime] = useState(\"\");\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n  const [name, setName] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n  const [mobile, setMobile] = useState(\"\");\n  const [pronoun, setPronoun] = useState(\"\");\n  const [isConfirmed, setIsConfirmed] = useState(false);\n  const [isSignInOpen, setIsSignInOpen] = useState(false);\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [clientId, setClientId] = useState(null);\n  const [procedures, setProcedures] = useState([]);\n  const [aestheticians, setAestheticians] = useState([]);\n  const [selectedItem, setSelectedItem] = useState(\"\");\n  const [staffError, setStaffError] = useState(\"\");\n  const [procedureItemMap, setProcedureItemMap] = useState({});\n  const [cartId, setCartId] = useState(\"\");\n  const [appointmentcartId, setAppointmentCartId] = useState(\"\");\n  const [timebookedid, setTimeBookedId] = useState(\"\");\n  const [availableDates, setAvailableDates] = useState([]);\n  const [availableTimeSlots, setAvailableTimeSlots] = useState([]);\n  const [isLoadingDates, setIsLoadingDates] = useState(false);\n  const [isLoadingTimeSlots, setIsLoadingTimeSlots] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const firstVisitRef = useRef(null);\n  const procedureRef = useRef(null);\n  const aestheticianRef = useRef(null);\n  const dateTimeRef = useRef(null);\n  const personalInfoRef = useRef(null);\n  const confirmationRef = useRef(null);\n  const [staffVariantMap, setStaffVariantMap] = useState({});\n  const [selectedStaffVariantId, setSelectedStaffVariantId] = useState(\"\");\n  const [selectedItemId, setSelectedItemId] = useState(\"\");\n  const [selectedTimeId, setSelectedTimeId] = useState(\"\");\n  const scrollToRef = ref => {\n    var _ref$current;\n    (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    if (isFirstVisit !== null) {\n      scrollToRef(isFirstVisit ? personalInfoRef : procedureRef);\n      if (isFirstVisit === false) {\n        setIsSignInOpen(true);\n      }\n    }\n  }, [isFirstVisit]);\n  useEffect(() => {\n    if (clientId) {\n      setIsSignedIn(true);\n      setIsSignInOpen(false); // Close sign-in modal after successful sign-in\n    }\n  }, [clientId]);\n  useEffect(() => {\n    if (isFirstVisit !== null) {\n      scrollToRef(isFirstVisit ? personalInfoRef : procedureRef);\n    }\n  }, [isFirstVisit]);\n  useEffect(() => {\n    if (selectedProcedure && !isFirstVisit) {\n      scrollToRef(aestheticianRef);\n    }\n  }, [selectedProcedure, isFirstVisit]);\n  useEffect(() => {\n    if (selectedAesthetician && !isFirstVisit) {\n      scrollToRef(dateTimeRef);\n    }\n  }, [selectedAesthetician, isFirstVisit]);\n  useEffect(() => {\n    if (selectedDate && selectedTime) {\n      scrollToRef(personalInfoRef);\n    }\n  }, [selectedDate, selectedTime]);\n  useEffect(() => {\n    const fetchAppointmentData = async (retryCount = 5) => {\n      let extractedClientId;\n      if (!isFirstVisit) {\n        extractedClientId = clientId.split(\":\").pop();\n        console.log(\"extracted id: \", extractedClientId);\n      }\n      try {\n        var _data$data, _data$data$data, _data$data$data$creat;\n        const response = await fetch(\"https://api.vibrantlifespa.com:8001/createAppoinmentCart\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            locationId: \"urn:blvd:Location:90184c75-0c8b-48d8-8a8a-39c9a22e6099\",\n            clientId: isFirstVisit ? \"00f42824-4154-4e07-8240-e694d2c2a7c7\" : extractedClientId\n          })\n        });\n\n        // Check if the response is okay (status code 200-299)\n        if (!response.ok) {\n          throw new Error(`Server error: ${response.statusText}`);\n        }\n        const data = await response.json();\n        console.log(\"data: \", data);\n        const {\n          availableCategories,\n          id: newCartId\n        } = ((_data$data = data.data) === null || _data$data === void 0 ? void 0 : (_data$data$data = _data$data.data) === null || _data$data$data === void 0 ? void 0 : (_data$data$data$creat = _data$data$data.createCart) === null || _data$data$data$creat === void 0 ? void 0 : _data$data$data$creat.cart) || {};\n        setCartId(newCartId); // Store the cart ID\n\n        if (Array.isArray(availableCategories)) {\n          // Filter out the unwanted categories by name\n          const filteredCategories = availableCategories.filter(category => ![\"Add-on\", \"Investor's family & Staffs Pricing\", \"Memberships\", \"Gift Cards\"].includes(category.name));\n          const procedures = filteredCategories.map(category => category.name);\n\n          // Create maps for items and staff variants\n          const procedureMap = {};\n          const staffMap = {};\n          filteredCategories.forEach(category => {\n            if (category.availableItems && category.availableItems.length > 0) {\n              const item = category.availableItems[0];\n              procedureMap[category.name] = {\n                itemId: item.id,\n                name: item.name\n              };\n              if (item.staffVariants) {\n                item.staffVariants.forEach(variant => {\n                  staffMap[variant.staff.displayName] = variant.id;\n                });\n              }\n            }\n          });\n          const aestheticians = Object.keys(staffMap);\n          setProcedures(procedures);\n          setAestheticians(aestheticians);\n          setProcedureItemMap(procedureMap);\n          setStaffVariantMap(staffMap);\n          console.log(\"procedureItemMap:\", procedureMap);\n          console.log(\"staffVariantMap:\", staffMap);\n        }\n      } catch (error) {\n        console.error(\"Error fetching appointment data:\", error);\n        if (retryCount > 0) {\n          console.log(`Retrying... attempts left: ${retryCount}`);\n          setTimeout(() => fetchAppointmentData(retryCount - 1), 2000); // Retry after 2 seconds\n        } else {\n          console.error(\"Failed after multiple attempts\");\n        }\n      }\n    };\n    if (isFirstVisit === true || isFirstVisit === false && clientId) {\n      fetchAppointmentData();\n    }\n  }, [isFirstVisit, clientId]);\n  useEffect(() => {\n    const fetchAvailableDates = async () => {\n      if (!appointmentcartId) return;\n      setIsLoadingDates(true);\n      const today = new Date();\n      const twoWeeksLater = new Date();\n      twoWeeksLater.setDate(today.getDate() + 56);\n      const requestBody = {\n        cartId: appointmentcartId,\n        searchRangeLower: formatDateToString(today),\n        searchRangeUpper: formatDateToString(twoWeeksLater)\n      };\n      try {\n        var _result$data, _result$data$data;\n        const response = await fetch(\"https://api.vibrantlifespa.com:8001/appointmentAvailableDatesSlots\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(requestBody)\n        });\n        const result = await response.json();\n        if (result.status && (_result$data = result.data) !== null && _result$data !== void 0 && (_result$data$data = _result$data.data) !== null && _result$data$data !== void 0 && _result$data$data.cartBookableDates) {\n          const dates = result.data.data.cartBookableDates.map(slot => slot.date);\n          setAvailableDates(dates);\n          console.log(\"Available dates:\", dates);\n        }\n      } catch (error) {\n        console.error(\"Error fetching available dates:\", error);\n      } finally {\n        setIsLoadingDates(false);\n      }\n    };\n    fetchAvailableDates();\n  }, [appointmentcartId, aestheticians]);\n  const formatDateToString = date => {\n    return date.toISOString().split(\"T\")[0];\n  };\n  const getDaysInMonth = month => {\n    const year = month.getFullYear();\n    const monthIndex = month.getMonth();\n    const firstDay = new Date(year, monthIndex, 1);\n    const lastDay = new Date(year, monthIndex + 1, 0);\n    const days = [];\n\n    // Add empty slots for days before the first day of the month\n    for (let i = 0; i < firstDay.getDay(); i++) {\n      days.push(null);\n    }\n\n    // Add days of the month\n    for (let date = 1; date <= lastDay.getDate(); date++) {\n      const dayDate = new Date(year, monthIndex, date);\n      days.push({\n        date: dayDate,\n        dateString: formatDateToString(dayDate)\n      });\n    }\n    return days;\n  };\n  const goToNextMonth = () => {\n    setCurrentMonth(new Date(currentMonth.setMonth(currentMonth.getMonth() + 1)));\n  };\n  const goToPreviousMonth = () => {\n    setCurrentMonth(new Date(currentMonth.setMonth(currentMonth.getMonth() - 1)));\n  };\n  // When rendering dates:\n  const handleDateClick = async selectedDate => {\n    console.log(\"Selected date:\", selectedDate);\n    if (!selectedDate || !cartId) return;\n\n    // Format the date to 'YYYY-MM-DD'\n    const formattedDate = new Date(selectedDate).toISOString().split(\"T\")[0];\n    console.log(\"Formatted date:\", formattedDate);\n    setSelectedDate(selectedDate);\n    console.log(\"Selected date:\", selectedDate);\n    setSelectedTime(\"\"); // Reset selected time when date changes\n    setIsLoadingTimeSlots(true);\n    try {\n      var _result$data2, _result$data2$data;\n      const response = await fetch(\"https://api.vibrantlifespa.com:8001/appointmentAvailableTimeSlots\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          cartId: appointmentcartId,\n          date: formattedDate // Use the formatted date here\n        })\n      });\n      console.log(\"body sending to api: \", appointmentcartId, formattedDate);\n      const result = await response.json();\n      console.log(\"time result:\", result);\n      if (result.status && (_result$data2 = result.data) !== null && _result$data2 !== void 0 && (_result$data2$data = _result$data2.data) !== null && _result$data2$data !== void 0 && _result$data2$data.cartBookableTimes) {\n        const timeSlots = result.data.data.cartBookableTimes.map(slot => {\n          const startTime = new Date(slot.startTime); // This converts the time with the timezone offset\n          return {\n            id: slot.id,\n            time: startTime.toLocaleTimeString(\"en-US\", {\n              hour: \"numeric\",\n              minute: \"2-digit\",\n              hour12: true,\n              timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone // Local time zone of user\n            })\n          };\n        });\n        setAvailableTimeSlots(timeSlots);\n      }\n    } catch (error) {\n      console.error(\"Error fetching available time slots:\", error);\n    } finally {\n      setIsLoadingTimeSlots(false);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Split the full name\n    const nameParts = firstName.trim().split(\" \");\n    let updatedFirstName, updatedLastName;\n    if (nameParts.length === 1) {\n      // If only one word is entered, assign it to both first and last name\n      updatedFirstName = nameParts[0] || \"\";\n      updatedLastName = nameParts[0] || \"\"; // Use the same for last name\n    } else {\n      // Otherwise, split normally\n      updatedFirstName = nameParts[0] || \"\";\n      updatedLastName = nameParts.slice(1).join(\" \") || \"\";\n    }\n\n    // Update the state with the new names\n    setFirstName(updatedFirstName);\n    setLastName(updatedLastName);\n    console.log(\"first name: \", updatedFirstName);\n    console.log(\"last name: \", updatedLastName);\n\n    // Format phone number to digits only and ensure it is in the correct format (+ country code)\n    let formattedPhoneNumber = mobile.replace(/[^\\d]/g, \"\"); // Removes anything that's not a number\n\n    // Check if the phone number has the correct length for your country (adjust based on region)\n    if (formattedPhoneNumber.length === 10) {\n      // Assuming a local number format\n      formattedPhoneNumber = `+1${formattedPhoneNumber}`; // Adding country code for US\n    }\n\n    // Check if all personal information fields are filled\n    if (!updatedFirstName || !updatedLastName || !email || !mobile) {\n      alert(\"Please fill out all personal information fields.\");\n      return;\n    }\n\n    // Prepare the request body for client creation\n    const requestBody = {\n      email,\n      dob: \"1990-01-01\",\n      externalId: email,\n      firstName: updatedFirstName,\n      lastName: updatedLastName,\n      mobilePhone: formattedPhoneNumber,\n      // Use the correctly formatted phone number\n      pronoun: \"Mr/Mrs\"\n    };\n    console.log(\"request body: \", requestBody);\n    try {\n      if (isFirstVisit) {\n        // For first-time users, create a new client\n        const createClientResponse = await fetch(\"https://api.vibrantlifespa.com:8001/createClient\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(requestBody)\n        });\n        console.log(createClientResponse);\n        if (!createClientResponse.ok) {\n          throw new Error(\"Failed to create client\");\n        }\n        const clientData = await createClientResponse.json();\n        console.log(\"Client created: \", clientData);\n        const clientInfoRequestBody = {\n          cartId: appointmentcartId,\n          clientInformation: {\n            email: email,\n            firstName: updatedFirstName,\n            lastName: updatedLastName,\n            phoneNumber: formattedPhoneNumber\n          }\n        };\n        console.log(\"client info request body: \", clientInfoRequestBody);\n        const clientInfoResponse = await fetch(\"https://api.vibrantlifespa.com:8001/addClientInfoToAppoinmentCart\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(clientInfoRequestBody)\n        });\n        if (!clientInfoResponse.ok) {\n          throw new Error(\"Failed to add client info to appointment cart\");\n        }\n        const clientInfoData = await clientInfoResponse.json();\n        console.log(\"Client Info response(first time user):\", clientInfoData);\n\n        // After client creation, checkout the appointment cart for first-time users\n        const checkoutResponse = await fetch(\"https://api.vibrantlifespa.com:8001/checkoutAppoinmentCart\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            cartId: timebookedid\n          })\n        });\n        if (!checkoutResponse.ok) {\n          throw new Error(\"Failed to checkout appointment cart for first-time user\");\n        }\n        const checkoutData = await checkoutResponse.json();\n        console.log(\"Checkout response (First-time user):\", checkoutData);\n      } else {\n        // For existing users, just checkout the appointment cart\n        const checkoutResponse = await fetch(\"https://api.vibrantlifespa.com:8001/checkoutAppoinmentCart\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            cartId: timebookedid\n          })\n        });\n        if (!checkoutResponse.ok) {\n          throw new Error(\"Failed to checkout appointment cart for existing user\");\n        }\n        const checkoutData = await checkoutResponse.json();\n        console.log(\"Checkout response (Existing user):\", checkoutData);\n      }\n\n      // Add client info to the appointment cart after creating/checking out the cart\n      const clientInfoRequestBody = {\n        cartId: appointmentcartId,\n        clientInformation: {\n          email: email,\n          firstName: updatedFirstName,\n          lastName: updatedLastName,\n          phoneNumber: formattedPhoneNumber\n        }\n      };\n      console.log(\"client info request body: \", clientInfoRequestBody);\n      const clientInfoResponse = await fetch(\"https://api.vibrantlifespa.com:8001/addClientInfoToAppoinmentCart\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(clientInfoRequestBody)\n      });\n      if (!clientInfoResponse.ok) {\n        throw new Error(\"Failed to add client info to appointment cart\");\n      }\n      const clientInfoData = await clientInfoResponse.json();\n      console.log(\"Client Info response:\", clientInfoData);\n\n      // If everything is successful, show confirmation and trigger confetti\n      setIsConfirmed(true);\n      confetti({\n        particleCount: 100,\n        spread: 70,\n        origin: {\n          y: 0.6\n        },\n        colors: [\"#5FD4D0\"]\n      });\n    } catch (error) {\n      console.error(\"Error submitting form:\", error);\n      alert(\"There was an error processing your appointment. Please try again.\");\n    }\n  };\n  const handleTimeSelection = async (time, timeId) => {\n    setSelectedTime(time);\n    setSelectedTimeId(timeId);\n    console.log(\"Selected time id:\", timeId);\n    try {\n      const response = await fetch(\"https://api.vibrantlifespa.com:8001/addSelectedTimeToCart\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          cartId: appointmentcartId,\n          bookableTimeId: timeId\n        })\n      });\n      const data = await response.json();\n      console.log(\"Add selected time to cart response:\", data);\n      console.log(\"time added id: \", data.data.data.reserveCartBookableItems.cart.id);\n      setTimeBookedId(data.data.data.reserveCartBookableItems.cart.id);\n      if (!response.ok) {\n        throw new Error(\"Failed to add selected time to cart\");\n      }\n    } catch (error) {\n      console.error(\"Error adding selected time to cart:\", error);\n      // Optionally reset the selection if the API call fails\n      setSelectedTime(\"\");\n      setSelectedTimeId(\"\");\n    }\n  };\n  const formatPhoneNumber = value => {\n    const phoneNumber = value.replace(/[^\\d]/g, \"\");\n    const phoneNumberLength = phoneNumber.length;\n    if (phoneNumberLength < 4) return phoneNumber;\n    if (phoneNumberLength < 7) {\n      return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3)}`;\n    }\n    return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3, 6)}-${phoneNumber.slice(6, 10)}`;\n  };\n  const handleEditAppointment = () => {\n    setIsConfirmed(false);\n    scrollToRef(firstVisitRef);\n  };\n  const handleProcedureChange = e => {\n    const selectedProcedure = e.target.value;\n    setSelectedProcedure(selectedProcedure);\n\n    // Get the itemId for the selected procedure\n    const itemInfo = procedureItemMap[selectedProcedure];\n    if (itemInfo) {\n      setSelectedItemId(itemInfo.itemId);\n      console.log(\"Selected item ID:\", itemInfo.itemId);\n    } else {\n      setSelectedItemId(\"\");\n    }\n  };\n  const handleAestheticianChange = async e => {\n    const selectedStaff = e.target.value;\n    setSelectedAesthetician(selectedStaff);\n\n    // Get the staff variant ID\n    const variantId = staffVariantMap[selectedStaff];\n    setSelectedStaffVariantId(variantId);\n    console.log(\"Selected staff variant ID:\", variantId);\n    if (variantId && selectedItemId && cartId) {\n      try {\n        var _data$data2, _data$data$errors$;\n        const response = await fetch(\"https://api.vibrantlifespa.com:8001/addItemtoAppoinmentCart\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            cartId: cartId,\n            itemId: selectedItemId,\n            itemStaffVariantId: variantId\n          })\n        });\n        console.log(\"body sending to api: \", cartId, selectedItemId, variantId);\n        const data = await response.json();\n        console.log(\"Add item to cart response:\", data);\n        if ((_data$data2 = data.data) !== null && _data$data2 !== void 0 && _data$data2.errors && data.data.errors.length > 0 && (_data$data$errors$ = data.data.errors[0]) !== null && _data$data$errors$ !== void 0 && _data$data$errors$.message) {\n          setStaffError(\"This Aesthetician is not available for the selected procedure. Kindly choose another Aesthetician.\");\n        } else {\n          var _data$data3, _data$data3$data, _data$data3$data$addC;\n          setStaffError(\"\");\n          setAppointmentCartId((_data$data3 = data.data) === null || _data$data3 === void 0 ? void 0 : (_data$data3$data = _data$data3.data) === null || _data$data3$data === void 0 ? void 0 : (_data$data3$data$addC = _data$data3$data.addCartSelectedBookableItem) === null || _data$data3$data$addC === void 0 ? void 0 : _data$data3$data$addC.cart.id);\n        }\n        console.log(\"Appointment cart id:\", appointmentcartId);\n      } catch (error) {\n        console.error(\"Error adding item to cart:\", error);\n      }\n    }\n  };\n  if (isConfirmed) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"font-[GeistSans,'GeistSans Fallback'] max-w-md mx-auto p-6 bg-white rounded-lg shadow-lg space-y-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold mb-6 text-center text-teal-500\",\n        children: \"Thank You! We look forward to seeing you:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\" \", firstName, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Mobile:\", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\" \", mobile, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [isFirstVisit ? \"Initial consultation: \" : `Procedure: `, /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: selectedProcedure\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 11\n        }, this), !isFirstVisit && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Aesthetician:\", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\" \", selectedAesthetician, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 28\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date:\", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\" \", selectedDate === null || selectedDate === void 0 ? void 0 : selectedDate.toLocaleDateString(), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 18\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Time:\", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\" \", selectedTime, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 668,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isSignInOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"font-[GeistSans,'GeistSans Fallback'] fixed inset-0 bg-gray-900 bg-opacity-50 flex justify-center items-center z-10\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rounded-lg w-full max-w-md transform transition-all duration-700 scale-0 opacity-0 ease-out\",\n        style: {\n          transition: \"transform 0.7s ease-out, opacity 0.7s ease-out\",\n          transform: isSignInOpen ? \"scale(1)\" : \"scale(0)\",\n          opacity: isSignInOpen ? \"1\" : \"0\"\n        },\n        children: /*#__PURE__*/_jsxDEV(SignIn, {\n          setClientId: setClientId,\n          onClose: () => setIsSignInOpen(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"font-[GeistSans,'GeistSans Fallback'] min-h-screen w-full flex items-center justify-center bg-gray-50 py-10 px-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-[350px]  mx-auto p-[1.5rem] bg-white rounded-lg shadow-lg space-y-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold mb-6 text-center\",\n          \"data-id\": \"18\",\n          children: \"Let's get you scheduled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 11\n        }, this), isSignedIn ? /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold mb-4 text-center\",\n          children: \"Welcome!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: firstVisitRef,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg mb-4\",\n            children: \"Is this your first visit?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 703,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-center space-x-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setIsFirstVisit(true);\n                setIsSignedIn(false);\n                setClientId(null);\n              },\n              className: \"inline-flex items-center justify-center gap-2 whitespace-nowrap  rounded-md text-sm font-medium ring-offset-background  transition-colors focus-visible:outline-none focus-visible:ring-2  focus-visible:ring-ring focus-visible:ring-offset-2  disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4  [&_svg]:shrink-0 h-10 px-4 py-2 bg-[#5FD4D0] hover:bg-[#5FD4D0]/90 text-white\",\n              \"data-id\": \"22\",\n              children: \"Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setIsFirstVisit(false);\n                setIsSignedIn(false);\n                setClientId(null);\n                setIsSignInOpen(true);\n              },\n              className: \"inline-flex items-center justify-center gap-2 whitespace-nowrap  rounded-md text-sm font-medium ring-offset-background  transition-colors focus-visible:outline-none focus-visible:ring-2  focus-visible:ring-ring focus-visible:ring-offset-2  disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4  [&_svg]:shrink-0 h-10 px-4 py-2 bg-[#5FD4D0] hover:bg-[#5FD4D0]/90 text-white\",\n              \"data-id\": \"22\",\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 729,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 13\n        }, this), (isFirstVisit === true || isFirstVisit === false && clientId) && /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: procedureRef,\n          className: \"mb-4 transition-opacity duration-500 ease-in-out opacity-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"procedure\",\n            className: \"text-lg font-semibold block\",\n            children: \"Select Procedure\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 756,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"procedure\",\n              value: selectedProcedure,\n              onChange: handleProcedureChange,\n              className: \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                className: \"text-muted-foreground\",\n                children: \"Choose a Procedure\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 769,\n                columnNumber: 19\n              }, this), procedures.map(procedure => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: procedure,\n                className: \"text-sm text-foreground\",\n                children: procedure\n              }, procedure, false, {\n                fileName: _jsxFileName,\n                lineNumber: 773,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 763,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 13\n        }, this), selectedProcedure && /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: aestheticianRef,\n          className: `mb-4 transition-opacity duration-700 ease-in-out ${selectedProcedure ? \"opacity-100\" : \"opacity-0\"}`,\n          children: [staffError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-red-500 text-sm mb-4\",\n            children: staffError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 792,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"aesthetician\",\n            className: \"text-lg font-semibold block\",\n            children: \"Select Aesthetician\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 794,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"aesthetician\",\n              value: selectedAesthetician,\n              onChange: handleAestheticianChange,\n              className: \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                className: \"text-muted-foreground\",\n                children: \"Choose an Aesthetician\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 807,\n                columnNumber: 19\n              }, this), aestheticians.map(aesthetician => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: aesthetician,\n                className: \"text-sm text-foreground\",\n                children: aesthetician\n              }, aesthetician, false, {\n                fileName: _jsxFileName,\n                lineNumber: 811,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 801,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 800,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 13\n        }, this), selectedProcedure && selectedAesthetician && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-semibold mb-4\",\n            children: \"Select Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 826,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setCurrentMonth(new Date(currentMonth.getFullYear(), currentMonth.getMonth() - 1, 1)),\n              className: \"rounded hover:bg-gray-300\",\n              children: /*#__PURE__*/_jsxDEV(ChevronLeft, {\n                className: \"h-4 w-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 842,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 830,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-[GeistSans,'GeistSans Fallback'] text-sm font-medium\",\n              children: currentMonth.toLocaleString(\"default\", {\n                month: \"long\",\n                year: \"numeric\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 845,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setCurrentMonth(new Date(currentMonth.getFullYear(), currentMonth.getMonth() + 1, 1)),\n              className: \"rounded hover:bg-gray-300 \",\n              children: /*#__PURE__*/_jsxDEV(ChevronRight, {\n                className: \"h-4 w-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 863,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 851,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 829,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-7 gap-1.5 text-center mb-2\",\n            children: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"].map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center text-sm\",\n              children: day\n            }, day, false, {\n              fileName: _jsxFileName,\n              lineNumber: 870,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 868,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-7 gap-3 text-center \",\n            children: getDaysInMonth(currentMonth).map((dayInfo, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: dayInfo ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: ` flex items-center justify-center rounded-md \n        ${availableDates.includes(dayInfo.dateString) ? \"font-bold\" : \"\"} \n${selectedDate && dayInfo.date.toDateString() === selectedDate.toDateString() ? \"bg-[#5FD4D0] text-white\" // Selected state\n                : \"hover:bg-red-500 hover:text-red-500\" // Using Tailwind's predefined red color\n                }\n        ${!availableDates.includes(dayInfo.dateString) ? \"opacity-50 cursor-not-allowed\" : \"\"}`,\n                onClick: () => dayInfo && availableDates.includes(dayInfo.dateString) && handleDateClick(dayInfo.date),\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"border p-[2.5px] border-[#d9d9d9] rounded-md text-[13px]  hover:bg-[#d9d9d9] hover:text-[black] min-w-7\",\n                  children: dayInfo.date.getDate()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 896,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 881,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-[red]\",\n                children: \"\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 901,\n                columnNumber: 23\n              }, this)\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 879,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 877,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-semibold mt-4 mb-2\",\n            children: \"Select Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 907,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [isLoadingTimeSlots ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center py-4\",\n              children: \"Loading available times...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 910,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-2 gap-3\",\n              children: availableTimeSlots.map(slot => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleTimeSelection(slot.time, slot.id),\n                className: `w-full p-2 text-sm rounded-lg transition-colors duration-200\n                ${selectedTime === slot.time ? \"bg-[#5FD4D0] text-white\" : \"border border-gray-300 bg-white text-gray-700 hover:bg-gray-100\"}`,\n                children: slot.time\n              }, slot.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 916,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 914,\n              columnNumber: 19\n            }, this), !isLoadingTimeSlots && availableTimeSlots.length === 0 && selectedDate && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-center text-gray-500\",\n              children: \"No available time slots for this date. Kindly select another date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 930,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 908,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 825,\n          columnNumber: 13\n        }, this), selectedDate && selectedTime && (isFirstVisit === true || selectedProcedure) && /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: personalInfoRef,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-semibold mb-2\",\n            children: \"Your Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 943,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                className: \"block text-sm font-medium text-black\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 946,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"name\",\n                type: \"text\",\n                value: firstName,\n                onChange: e => setFirstName(e.target.value),\n                placeholder: \"Enter your name\",\n                className: \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 952,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 945,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                className: \"block text-sm font-medium text-black\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 962,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"email\",\n                type: \"email\",\n                value: email,\n                onChange: e => setEmail(e.target.value),\n                placeholder: \"Enter your email\",\n                className: \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 968,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 961,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"mobile\",\n                className: \"block text-sm font-medium text-black\",\n                children: \"Mobile Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 978,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"mobile\",\n                type: \"text\",\n                value: mobile,\n                onChange: e => setMobile(formatPhoneNumber(e.target.value)),\n                placeholder: \"(123) 456-7890\",\n                className: \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 984,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 977,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4 pt-4 text-black rounded\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-lg  mb-2 font-semibold\",\n                children: \"Your Appointment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 998,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-black\",\n                children: [\"Name: \", firstName || \"Not provided\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1002,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Email: \", email || \"Not provided\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1005,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Mobile Number: \", mobile || \"Not provided\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1006,\n                columnNumber: 21\n              }, this), !isFirstVisit && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Procedure: \", selectedProcedure]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1009,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Aesthetician: \", selectedAesthetician]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1010,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Date: \", selectedDate === null || selectedDate === void 0 ? void 0 : selectedDate.toLocaleDateString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1013,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Time: \", selectedTime]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1014,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 997,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: `inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 h-10 px-4 py-2 w-full mt-4 bg-[#5FD4D0] hover:bg-[#5FD4D0]/90 text-white \n  ${!firstName || !email || !mobile ? \"disabled:opacity-50 disabled:cursor-not-allowed\" : \"\"}`,\n              disabled: !firstName || !email || !mobile,\n              children: \"Schedule Now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1016,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 944,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 942,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(BookingDisplayMain, \"nqZ/Bfres4HaCIi4xKAzwf21Bt8=\");\n_c = BookingDisplayMain;\nvar _c;\n$RefreshReg$(_c, \"BookingDisplayMain\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ChevronLeft","ChevronRight","confetti","SignIn","jsxDEV","_jsxDEV","Fragment","_Fragment","BookingDisplayMain","_s","isFirstVisit","setIsFirstVisit","selectedProcedure","setSelectedProcedure","selectedAesthetician","setSelectedAesthetician","selectedDate","setSelectedDate","selectedTime","setSelectedTime","currentMonth","setCurrentMonth","Date","name","setName","firstName","setFirstName","lastName","setLastName","email","setEmail","dob","setDob","mobile","setMobile","pronoun","setPronoun","isConfirmed","setIsConfirmed","isSignInOpen","setIsSignInOpen","isSignedIn","setIsSignedIn","clientId","setClientId","procedures","setProcedures","aestheticians","setAestheticians","selectedItem","setSelectedItem","staffError","setStaffError","procedureItemMap","setProcedureItemMap","cartId","setCartId","appointmentcartId","setAppointmentCartId","timebookedid","setTimeBookedId","availableDates","setAvailableDates","availableTimeSlots","setAvailableTimeSlots","isLoadingDates","setIsLoadingDates","isLoadingTimeSlots","setIsLoadingTimeSlots","isLoading","setIsLoading","firstVisitRef","procedureRef","aestheticianRef","dateTimeRef","personalInfoRef","confirmationRef","staffVariantMap","setStaffVariantMap","selectedStaffVariantId","setSelectedStaffVariantId","selectedItemId","setSelectedItemId","selectedTimeId","setSelectedTimeId","scrollToRef","ref","_ref$current","current","scrollIntoView","behavior","fetchAppointmentData","retryCount","extractedClientId","split","pop","console","log","_data$data","_data$data$data","_data$data$data$creat","response","fetch","method","headers","body","JSON","stringify","locationId","ok","Error","statusText","data","json","availableCategories","id","newCartId","createCart","cart","Array","isArray","filteredCategories","filter","category","includes","map","procedureMap","staffMap","forEach","availableItems","length","item","itemId","staffVariants","variant","staff","displayName","Object","keys","error","setTimeout","fetchAvailableDates","today","twoWeeksLater","setDate","getDate","requestBody","searchRangeLower","formatDateToString","searchRangeUpper","_result$data","_result$data$data","result","status","cartBookableDates","dates","slot","date","toISOString","getDaysInMonth","month","year","getFullYear","monthIndex","getMonth","firstDay","lastDay","days","i","getDay","push","dayDate","dateString","goToNextMonth","setMonth","goToPreviousMonth","handleDateClick","formattedDate","_result$data2","_result$data2$data","cartBookableTimes","timeSlots","startTime","time","toLocaleTimeString","hour","minute","hour12","timeZone","Intl","DateTimeFormat","resolvedOptions","handleSubmit","e","preventDefault","nameParts","trim","updatedFirstName","updatedLastName","slice","join","formattedPhoneNumber","replace","alert","externalId","mobilePhone","createClientResponse","clientData","clientInfoRequestBody","clientInformation","phoneNumber","clientInfoResponse","clientInfoData","checkoutResponse","checkoutData","particleCount","spread","origin","y","colors","handleTimeSelection","timeId","bookableTimeId","reserveCartBookableItems","formatPhoneNumber","value","phoneNumberLength","handleEditAppointment","handleProcedureChange","target","itemInfo","handleAestheticianChange","selectedStaff","variantId","_data$data2","_data$data$errors$","itemStaffVariantId","errors","message","_data$data3","_data$data3$data","_data$data3$data$addC","addCartSelectedBookableItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleDateString","style","transition","transform","opacity","onClose","onClick","htmlFor","onChange","procedure","aesthetician","toLocaleString","day","dayInfo","idx","toDateString","onSubmit","type","placeholder","disabled","_c","$RefreshReg$"],"sources":["/Users/shiza/bookingflowlatest/src/components/BookingDisplay.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\nimport confetti from \"canvas-confetti\";\nimport SignIn from \"./Signin.js\";\n\nexport default function BookingDisplayMain() {\n  const [isFirstVisit, setIsFirstVisit] = useState(null);\n  const [selectedProcedure, setSelectedProcedure] = useState(\"\");\n  const [selectedAesthetician, setSelectedAesthetician] = useState(\"\");\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedTime, setSelectedTime] = useState(\"\");\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n  const [name, setName] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n  const [mobile, setMobile] = useState(\"\");\n  const [pronoun, setPronoun] = useState(\"\");\n  const [isConfirmed, setIsConfirmed] = useState(false);\n  const [isSignInOpen, setIsSignInOpen] = useState(false);\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [clientId, setClientId] = useState(null);\n  const [procedures, setProcedures] = useState([]);\n  const [aestheticians, setAestheticians] = useState([]);\n  const [selectedItem, setSelectedItem] = useState(\"\");\n  const [staffError, setStaffError] = useState(\"\");\n  const [procedureItemMap, setProcedureItemMap] = useState({});\n  const [cartId, setCartId] = useState(\"\");\n  const [appointmentcartId, setAppointmentCartId] = useState(\"\");\n  const [timebookedid, setTimeBookedId] = useState(\"\");\n  const [availableDates, setAvailableDates] = useState([]);\n  const [availableTimeSlots, setAvailableTimeSlots] = useState([]);\n  const [isLoadingDates, setIsLoadingDates] = useState(false);\n  const [isLoadingTimeSlots, setIsLoadingTimeSlots] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const firstVisitRef = useRef(null);\n  const procedureRef = useRef(null);\n  const aestheticianRef = useRef(null);\n  const dateTimeRef = useRef(null);\n  const personalInfoRef = useRef(null);\n  const confirmationRef = useRef(null);\n  const [staffVariantMap, setStaffVariantMap] = useState({});\n  const [selectedStaffVariantId, setSelectedStaffVariantId] = useState(\"\");\n  const [selectedItemId, setSelectedItemId] = useState(\"\");\n  const [selectedTimeId, setSelectedTimeId] = useState(\"\");\n\n  const scrollToRef = (ref) => {\n    ref.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    if (isFirstVisit !== null) {\n      scrollToRef(isFirstVisit ? personalInfoRef : procedureRef);\n      if (isFirstVisit === false) {\n        setIsSignInOpen(true);\n      }\n    }\n  }, [isFirstVisit]);\n\n  useEffect(() => {\n    if (clientId) {\n      setIsSignedIn(true);\n      setIsSignInOpen(false); // Close sign-in modal after successful sign-in\n    }\n  }, [clientId]);\n  useEffect(() => {\n    if (isFirstVisit !== null) {\n      scrollToRef(isFirstVisit ? personalInfoRef : procedureRef);\n    }\n  }, [isFirstVisit]);\n\n  useEffect(() => {\n    if (selectedProcedure && !isFirstVisit) {\n      scrollToRef(aestheticianRef);\n    }\n  }, [selectedProcedure, isFirstVisit]);\n\n  useEffect(() => {\n    if (selectedAesthetician && !isFirstVisit) {\n      scrollToRef(dateTimeRef);\n    }\n  }, [selectedAesthetician, isFirstVisit]);\n\n  useEffect(() => {\n    if (selectedDate && selectedTime) {\n      scrollToRef(personalInfoRef);\n    }\n  }, [selectedDate, selectedTime]);\n\n  useEffect(() => {\n    const fetchAppointmentData = async (retryCount = 5) => {\n      let extractedClientId;\n      if (!isFirstVisit) {\n        extractedClientId = clientId.split(\":\").pop();\n        console.log(\"extracted id: \", extractedClientId);\n      }\n\n      try {\n        const response = await fetch(\n          \"https://api.vibrantlifespa.com:8001/createAppoinmentCart\",\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              locationId:\n                \"urn:blvd:Location:90184c75-0c8b-48d8-8a8a-39c9a22e6099\",\n              clientId: isFirstVisit\n                ? \"00f42824-4154-4e07-8240-e694d2c2a7c7\"\n                : extractedClientId,\n            }),\n          },\n        );\n\n        // Check if the response is okay (status code 200-299)\n        if (!response.ok) {\n          throw new Error(`Server error: ${response.statusText}`);\n        }\n\n        const data = await response.json();\n        console.log(\"data: \", data);\n\n        const { availableCategories, id: newCartId } =\n          data.data?.data?.createCart?.cart || {};\n        setCartId(newCartId); // Store the cart ID\n\n        if (Array.isArray(availableCategories)) {\n          // Filter out the unwanted categories by name\n          const filteredCategories = availableCategories.filter(\n            (category) =>\n              ![\n                \"Add-on\",\n                \"Investor's family & Staffs Pricing\",\n                \"Memberships\",\n                \"Gift Cards\",\n              ].includes(category.name),\n          );\n\n          const procedures = filteredCategories.map(\n            (category) => category.name,\n          );\n\n          // Create maps for items and staff variants\n          const procedureMap = {};\n          const staffMap = {};\n\n          filteredCategories.forEach((category) => {\n            if (category.availableItems && category.availableItems.length > 0) {\n              const item = category.availableItems[0];\n              procedureMap[category.name] = {\n                itemId: item.id,\n                name: item.name,\n              };\n\n              if (item.staffVariants) {\n                item.staffVariants.forEach((variant) => {\n                  staffMap[variant.staff.displayName] = variant.id;\n                });\n              }\n            }\n          });\n\n          const aestheticians = Object.keys(staffMap);\n\n          setProcedures(procedures);\n          setAestheticians(aestheticians);\n          setProcedureItemMap(procedureMap);\n          setStaffVariantMap(staffMap);\n\n          console.log(\"procedureItemMap:\", procedureMap);\n          console.log(\"staffVariantMap:\", staffMap);\n        }\n      } catch (error) {\n        console.error(\"Error fetching appointment data:\", error);\n\n        if (retryCount > 0) {\n          console.log(`Retrying... attempts left: ${retryCount}`);\n          setTimeout(() => fetchAppointmentData(retryCount - 1), 2000); // Retry after 2 seconds\n        } else {\n          console.error(\"Failed after multiple attempts\");\n        }\n      }\n    };\n\n    if (isFirstVisit === true || (isFirstVisit === false && clientId)) {\n      fetchAppointmentData();\n    }\n  }, [isFirstVisit, clientId]);\n\n  useEffect(() => {\n    const fetchAvailableDates = async () => {\n      if (!appointmentcartId) return;\n      setIsLoadingDates(true);\n\n      const today = new Date();\n      const twoWeeksLater = new Date();\n      twoWeeksLater.setDate(today.getDate() + 56);\n\n      const requestBody = {\n        cartId: appointmentcartId,\n        searchRangeLower: formatDateToString(today),\n        searchRangeUpper: formatDateToString(twoWeeksLater),\n      };\n\n      try {\n        const response = await fetch(\n          \"https://api.vibrantlifespa.com:8001/appointmentAvailableDatesSlots\",\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(requestBody),\n          },\n        );\n\n        const result = await response.json();\n        if (result.status && result.data?.data?.cartBookableDates) {\n          const dates = result.data.data.cartBookableDates.map(\n            (slot) => slot.date,\n          );\n          setAvailableDates(dates);\n          console.log(\"Available dates:\", dates);\n        }\n      } catch (error) {\n        console.error(\"Error fetching available dates:\", error);\n      } finally {\n        setIsLoadingDates(false);\n      }\n    };\n\n    fetchAvailableDates();\n  }, [appointmentcartId, aestheticians]);\n\n  const formatDateToString = (date) => {\n    return date.toISOString().split(\"T\")[0];\n  };\n\n  const getDaysInMonth = (month) => {\n    const year = month.getFullYear();\n    const monthIndex = month.getMonth();\n    const firstDay = new Date(year, monthIndex, 1);\n    const lastDay = new Date(year, monthIndex + 1, 0);\n    const days = [];\n\n    // Add empty slots for days before the first day of the month\n    for (let i = 0; i < firstDay.getDay(); i++) {\n      days.push(null);\n    }\n\n    // Add days of the month\n    for (let date = 1; date <= lastDay.getDate(); date++) {\n      const dayDate = new Date(year, monthIndex, date);\n      days.push({\n        date: dayDate,\n        dateString: formatDateToString(dayDate),\n      });\n    }\n\n    return days;\n  };\n\n  const goToNextMonth = () => {\n    setCurrentMonth(\n      new Date(currentMonth.setMonth(currentMonth.getMonth() + 1)),\n    );\n  };\n\n  const goToPreviousMonth = () => {\n    setCurrentMonth(\n      new Date(currentMonth.setMonth(currentMonth.getMonth() - 1)),\n    );\n  };\n  // When rendering dates:\n  const handleDateClick = async (selectedDate) => {\n    console.log(\"Selected date:\", selectedDate);\n    if (!selectedDate || !cartId) return;\n\n    // Format the date to 'YYYY-MM-DD'\n    const formattedDate = new Date(selectedDate).toISOString().split(\"T\")[0];\n    console.log(\"Formatted date:\", formattedDate);\n\n    setSelectedDate(selectedDate);\n    console.log(\"Selected date:\", selectedDate);\n    setSelectedTime(\"\"); // Reset selected time when date changes\n    setIsLoadingTimeSlots(true);\n\n    try {\n      const response = await fetch(\n        \"https://api.vibrantlifespa.com:8001/appointmentAvailableTimeSlots\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            cartId: appointmentcartId,\n            date: formattedDate, // Use the formatted date here\n          }),\n        },\n      );\n      console.log(\"body sending to api: \", appointmentcartId, formattedDate);\n      const result = await response.json();\n      console.log(\"time result:\", result);\n\n      if (result.status && result.data?.data?.cartBookableTimes) {\n        const timeSlots = result.data.data.cartBookableTimes.map((slot) => {\n          const startTime = new Date(slot.startTime); // This converts the time with the timezone offset\n          return {\n            id: slot.id,\n            time: startTime.toLocaleTimeString(\"en-US\", {\n              hour: \"numeric\",\n              minute: \"2-digit\",\n              hour12: true,\n              timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone, // Local time zone of user\n            }),\n          };\n        });\n        setAvailableTimeSlots(timeSlots);\n      }\n    } catch (error) {\n      console.error(\"Error fetching available time slots:\", error);\n    } finally {\n      setIsLoadingTimeSlots(false);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Split the full name\n    const nameParts = firstName.trim().split(\" \");\n\n    let updatedFirstName, updatedLastName;\n\n    if (nameParts.length === 1) {\n      // If only one word is entered, assign it to both first and last name\n      updatedFirstName = nameParts[0] || \"\";\n      updatedLastName = nameParts[0] || \"\"; // Use the same for last name\n    } else {\n      // Otherwise, split normally\n      updatedFirstName = nameParts[0] || \"\";\n      updatedLastName = nameParts.slice(1).join(\" \") || \"\";\n    }\n\n    // Update the state with the new names\n    setFirstName(updatedFirstName);\n    setLastName(updatedLastName);\n\n    console.log(\"first name: \", updatedFirstName);\n    console.log(\"last name: \", updatedLastName);\n\n    // Format phone number to digits only and ensure it is in the correct format (+ country code)\n    let formattedPhoneNumber = mobile.replace(/[^\\d]/g, \"\"); // Removes anything that's not a number\n\n    // Check if the phone number has the correct length for your country (adjust based on region)\n    if (formattedPhoneNumber.length === 10) {\n      // Assuming a local number format\n      formattedPhoneNumber = `+1${formattedPhoneNumber}`; // Adding country code for US\n    }\n\n    // Check if all personal information fields are filled\n    if (!updatedFirstName || !updatedLastName || !email || !mobile) {\n      alert(\"Please fill out all personal information fields.\");\n      return;\n    }\n\n    // Prepare the request body for client creation\n    const requestBody = {\n      email,\n      dob: \"1990-01-01\",\n      externalId: email,\n      firstName: updatedFirstName,\n      lastName: updatedLastName,\n      mobilePhone: formattedPhoneNumber, // Use the correctly formatted phone number\n      pronoun: \"Mr/Mrs\",\n    };\n    console.log(\"request body: \", requestBody);\n\n    try {\n      if (isFirstVisit) {\n        // For first-time users, create a new client\n        const createClientResponse = await fetch(\n          \"https://api.vibrantlifespa.com:8001/createClient\",\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(requestBody),\n          },\n        );\n        console.log(createClientResponse);\n        if (!createClientResponse.ok) {\n          throw new Error(\"Failed to create client\");\n        }\n\n        const clientData = await createClientResponse.json();\n        console.log(\"Client created: \", clientData);\n\n        const clientInfoRequestBody = {\n          cartId: appointmentcartId,\n          clientInformation: {\n            email: email,\n            firstName: updatedFirstName,\n            lastName: updatedLastName,\n            phoneNumber: formattedPhoneNumber,\n          },\n        };\n        console.log(\"client info request body: \", clientInfoRequestBody);\n\n        const clientInfoResponse = await fetch(\n          \"https://api.vibrantlifespa.com:8001/addClientInfoToAppoinmentCart\",\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(clientInfoRequestBody),\n          },\n        );\n\n        if (!clientInfoResponse.ok) {\n          throw new Error(\"Failed to add client info to appointment cart\");\n        }\n\n        const clientInfoData = await clientInfoResponse.json();\n        console.log(\"Client Info response(first time user):\", clientInfoData);\n\n        // After client creation, checkout the appointment cart for first-time users\n        const checkoutResponse = await fetch(\n          \"https://api.vibrantlifespa.com:8001/checkoutAppoinmentCart\",\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              cartId: timebookedid,\n            }),\n          },\n        );\n\n        if (!checkoutResponse.ok) {\n          throw new Error(\n            \"Failed to checkout appointment cart for first-time user\",\n          );\n        }\n\n        const checkoutData = await checkoutResponse.json();\n        console.log(\"Checkout response (First-time user):\", checkoutData);\n      } else {\n        // For existing users, just checkout the appointment cart\n        const checkoutResponse = await fetch(\n          \"https://api.vibrantlifespa.com:8001/checkoutAppoinmentCart\",\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              cartId: timebookedid,\n            }),\n          },\n        );\n\n        if (!checkoutResponse.ok) {\n          throw new Error(\n            \"Failed to checkout appointment cart for existing user\",\n          );\n        }\n\n        const checkoutData = await checkoutResponse.json();\n        console.log(\"Checkout response (Existing user):\", checkoutData);\n      }\n\n      // Add client info to the appointment cart after creating/checking out the cart\n      const clientInfoRequestBody = {\n        cartId: appointmentcartId,\n        clientInformation: {\n          email: email,\n          firstName: updatedFirstName,\n          lastName: updatedLastName,\n          phoneNumber: formattedPhoneNumber,\n        },\n      };\n      console.log(\"client info request body: \", clientInfoRequestBody);\n\n      const clientInfoResponse = await fetch(\n        \"https://api.vibrantlifespa.com:8001/addClientInfoToAppoinmentCart\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(clientInfoRequestBody),\n        },\n      );\n\n      if (!clientInfoResponse.ok) {\n        throw new Error(\"Failed to add client info to appointment cart\");\n      }\n\n      const clientInfoData = await clientInfoResponse.json();\n      console.log(\"Client Info response:\", clientInfoData);\n\n      // If everything is successful, show confirmation and trigger confetti\n      setIsConfirmed(true);\n      confetti({\n        particleCount: 100,\n        spread: 70,\n        origin: { y: 0.6 },\n        colors: [\"#5FD4D0\"],\n      });\n    } catch (error) {\n      console.error(\"Error submitting form:\", error);\n      alert(\n        \"There was an error processing your appointment. Please try again.\",\n      );\n    }\n  };\n\n  const handleTimeSelection = async (time, timeId) => {\n    setSelectedTime(time);\n    setSelectedTimeId(timeId);\n    console.log(\"Selected time id:\", timeId);\n\n    try {\n      const response = await fetch(\n        \"https://api.vibrantlifespa.com:8001/addSelectedTimeToCart\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            cartId: appointmentcartId,\n            bookableTimeId: timeId,\n          }),\n        },\n      );\n\n      const data = await response.json();\n      console.log(\"Add selected time to cart response:\", data);\n      console.log(\n        \"time added id: \",\n        data.data.data.reserveCartBookableItems.cart.id,\n      );\n      setTimeBookedId(data.data.data.reserveCartBookableItems.cart.id);\n\n      if (!response.ok) {\n        throw new Error(\"Failed to add selected time to cart\");\n      }\n    } catch (error) {\n      console.error(\"Error adding selected time to cart:\", error);\n      // Optionally reset the selection if the API call fails\n      setSelectedTime(\"\");\n      setSelectedTimeId(\"\");\n    }\n  };\n\n  const formatPhoneNumber = (value) => {\n    const phoneNumber = value.replace(/[^\\d]/g, \"\");\n    const phoneNumberLength = phoneNumber.length;\n    if (phoneNumberLength < 4) return phoneNumber;\n    if (phoneNumberLength < 7) {\n      return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3)}`;\n    }\n    return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3, 6)}-${phoneNumber.slice(6, 10)}`;\n  };\n\n  const handleEditAppointment = () => {\n    setIsConfirmed(false);\n    scrollToRef(firstVisitRef);\n  };\n\n  const handleProcedureChange = (e) => {\n    const selectedProcedure = e.target.value;\n    setSelectedProcedure(selectedProcedure);\n\n    // Get the itemId for the selected procedure\n    const itemInfo = procedureItemMap[selectedProcedure];\n    if (itemInfo) {\n      setSelectedItemId(itemInfo.itemId);\n      console.log(\"Selected item ID:\", itemInfo.itemId);\n    } else {\n      setSelectedItemId(\"\");\n    }\n  };\n\n  const handleAestheticianChange = async (e) => {\n    const selectedStaff = e.target.value;\n    setSelectedAesthetician(selectedStaff);\n\n    // Get the staff variant ID\n    const variantId = staffVariantMap[selectedStaff];\n    setSelectedStaffVariantId(variantId);\n    console.log(\"Selected staff variant ID:\", variantId);\n\n    if (variantId && selectedItemId && cartId) {\n      try {\n        const response = await fetch(\n          \"https://api.vibrantlifespa.com:8001/addItemtoAppoinmentCart\",\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              cartId: cartId,\n              itemId: selectedItemId,\n              itemStaffVariantId: variantId,\n            }),\n          },\n        );\n        console.log(\"body sending to api: \", cartId, selectedItemId, variantId);\n        const data = await response.json();\n        console.log(\"Add item to cart response:\", data);\n        if (\n          data.data?.errors &&\n          data.data.errors.length > 0 &&\n          data.data.errors[0]?.message\n        ) {\n          setStaffError(\n            \"This Aesthetician is not available for the selected procedure. Kindly choose another Aesthetician.\",\n          );\n        } else {\n          setStaffError(\"\");\n          setAppointmentCartId(\n            data.data?.data?.addCartSelectedBookableItem?.cart.id,\n          );\n        }\n        console.log(\"Appointment cart id:\", appointmentcartId);\n      } catch (error) {\n        console.error(\"Error adding item to cart:\", error);\n      }\n    }\n  };\n\n  if (isConfirmed) {\n    return (\n      <div className=\"font-[GeistSans,'GeistSans Fallback'] max-w-md mx-auto p-6 bg-white rounded-lg shadow-lg space-y-8\">\n        <h1 className=\"text-2xl font-bold mb-6 text-center text-teal-500\">\n          Thank You! We look forward to seeing you:\n        </h1>\n        <div className=\"space-y-4\">\n          <p>\n            Name:<strong> {firstName} </strong>\n          </p>\n          <p>\n            Mobile:<strong> {mobile} </strong>\n          </p>\n          <p>\n            {isFirstVisit ? \"Initial consultation: \" : `Procedure: `}\n            <strong>{selectedProcedure}</strong>\n          </p>\n          {!isFirstVisit && (\n            <p>\n              Aesthetician:<strong> {selectedAesthetician} </strong>{\" \"}\n            </p>\n          )}\n          <p>\n            Date:<strong> {selectedDate?.toLocaleDateString()} </strong>{\" \"}\n          </p>\n          <p>\n            Time:<strong> {selectedTime} </strong>\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      {isSignInOpen && (\n        <div className=\"font-[GeistSans,'GeistSans Fallback'] fixed inset-0 bg-gray-900 bg-opacity-50 flex justify-center items-center z-10\">\n          <div\n            className=\"rounded-lg w-full max-w-md transform transition-all duration-700 scale-0 opacity-0 ease-out\"\n            style={{\n              transition: \"transform 0.7s ease-out, opacity 0.7s ease-out\",\n              transform: isSignInOpen ? \"scale(1)\" : \"scale(0)\",\n              opacity: isSignInOpen ? \"1\" : \"0\",\n            }}\n          >\n            <SignIn\n              setClientId={setClientId}\n              onClose={() => setIsSignInOpen(false)}\n            />\n          </div>\n        </div>\n      )}\n      <div className=\"font-[GeistSans,'GeistSans Fallback'] min-h-screen w-full flex items-center justify-center bg-gray-50 py-10 px-4\">\n        <div className=\"w-[350px]  mx-auto p-[1.5rem] bg-white rounded-lg shadow-lg space-y-8\">\n          <h1 className=\"text-2xl font-bold mb-6 text-center\" data-id=\"18\">\n            Let's get you scheduled\n          </h1>\n          {isSignedIn ? (\n            <h2 className=\"text-lg font-semibold mb-4 text-center\">Welcome!</h2>\n          ) : (\n            <div ref={firstVisitRef}>\n              <h2 className=\"text-lg mb-4\">Is this your first visit?</h2>\n              <div className=\"flex justify-center space-x-4\">\n                {/* <button class=\"inline-flex items-center justify-center gap-2 whitespace-nowrap \n              rounded-md text-sm font-medium ring-offset-background \n              transition-colors focus-visible:outline-none focus-visible:ring-2 \n              focus-visible:ring-ring focus-visible:ring-offset-2 \n              disabled:pointer-events-none disabled:opacity-50 [&amp;_svg]:pointer-events-none [&amp;_svg]:size-4 \n              [&amp;_svg]:shrink-0 h-10 px-4 py-2 bg-[#5FD4D0] hover:bg-[#5FD4D0]/90 text-white\" data-id=\"22\">\n                Yes\n                </button> */}\n                <button\n                  onClick={() => {\n                    setIsFirstVisit(true);\n                    setIsSignedIn(false);\n                    setClientId(null);\n                  }}\n                  className=\"inline-flex items-center justify-center gap-2 whitespace-nowrap \n              rounded-md text-sm font-medium ring-offset-background \n              transition-colors focus-visible:outline-none focus-visible:ring-2 \n              focus-visible:ring-ring focus-visible:ring-offset-2 \n              disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 \n              [&_svg]:shrink-0 h-10 px-4 py-2 bg-[#5FD4D0] hover:bg-[#5FD4D0]/90 text-white\"\n                  data-id=\"22\"\n                >\n                  Yes\n                </button>\n                <button\n                  onClick={() => {\n                    setIsFirstVisit(false);\n                    setIsSignedIn(false);\n                    setClientId(null);\n                    setIsSignInOpen(true);\n                  }}\n                  className=\"inline-flex items-center justify-center gap-2 whitespace-nowrap \n                  rounded-md text-sm font-medium ring-offset-background \n                  transition-colors focus-visible:outline-none focus-visible:ring-2 \n                  focus-visible:ring-ring focus-visible:ring-offset-2 \n                  disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 \n                  [&_svg]:shrink-0 h-10 px-4 py-2 bg-[#5FD4D0] hover:bg-[#5FD4D0]/90 text-white\"\n                  data-id=\"22\"\n                >\n                  No\n                </button>\n              </div>\n            </div>\n          )}\n\n          {/* Only show procedure selection after first visit choice is made */}\n          {(isFirstVisit === true || (isFirstVisit === false && clientId)) && (\n            <div\n              ref={procedureRef}\n              className=\"mb-4 transition-opacity duration-500 ease-in-out opacity-100\"\n            >\n              <label\n                htmlFor=\"procedure\"\n                className=\"text-lg font-semibold block\"\n              >\n                Select Procedure\n              </label>\n              <div className=\"relative\">\n                <select\n                  id=\"procedure\"\n                  value={selectedProcedure}\n                  onChange={handleProcedureChange}\n                  className=\"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\n                >\n                  <option value=\"\" className=\"text-muted-foreground\">\n                    Choose a Procedure\n                  </option>\n                  {procedures.map((procedure) => (\n                    <option\n                      key={procedure}\n                      value={procedure}\n                      className=\"text-sm text-foreground\"\n                    >\n                      {procedure}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          )}\n\n          {selectedProcedure && (\n            <div\n              ref={aestheticianRef}\n              className={`mb-4 transition-opacity duration-700 ease-in-out ${selectedProcedure ? \"opacity-100\" : \"opacity-0\"}`}\n            >\n              {staffError && (\n                <div className=\"text-red-500 text-sm mb-4\">{staffError}</div>\n              )}\n              <label\n                htmlFor=\"aesthetician\"\n                className=\"text-lg font-semibold block\"\n              >\n                Select Aesthetician\n              </label>\n              <div className=\"relative\">\n                <select\n                  id=\"aesthetician\"\n                  value={selectedAesthetician}\n                  onChange={handleAestheticianChange}\n                  className=\"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\n                >\n                  <option value=\"\" className=\"text-muted-foreground\">\n                    Choose an Aesthetician\n                  </option>\n                  {aestheticians.map((aesthetician) => (\n                    <option\n                      key={aesthetician}\n                      value={aesthetician}\n                      className=\"text-sm text-foreground\"\n                    >\n                      {aesthetician}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          )}\n\n          {selectedProcedure && selectedAesthetician && (\n            <div className=\"mb-4\">\n              <h2 className=\"text-lg font-semibold mb-4\">Select Date</h2>\n\n              {/* Month navigation */}\n              <div className=\"flex justify-between items-center mb-3\">\n                <button\n                  onClick={() =>\n                    setCurrentMonth(\n                      new Date(\n                        currentMonth.getFullYear(),\n                        currentMonth.getMonth() - 1,\n                        1,\n                      ),\n                    )\n                  }\n                  className=\"rounded hover:bg-gray-300\"\n                >\n                  <ChevronLeft className=\"h-4 w-4\" />\n                </button>\n\n                <span className=\"font-[GeistSans,'GeistSans Fallback'] text-sm font-medium\">\n                  {currentMonth.toLocaleString(\"default\", {\n                    month: \"long\",\n                    year: \"numeric\",\n                  })}\n                </span>\n                <button\n                  onClick={() =>\n                    setCurrentMonth(\n                      new Date(\n                        currentMonth.getFullYear(),\n                        currentMonth.getMonth() + 1,\n                        1,\n                      ),\n                    )\n                  }\n                  className=\"rounded hover:bg-gray-300 \"\n                >\n                  <ChevronRight className=\"h-4 w-4\" />\n                </button>\n              </div>\n\n              {/* Days of the week header */}\n              <div className=\"grid grid-cols-7 gap-1.5 text-center mb-2\">\n                {[\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"].map((day) => (\n                  <div key={day} className=\"text-center text-sm\">\n                    {day}\n                  </div>\n                ))}\n              </div>\n\n              {/* Date cells */}\n              <div className=\"grid grid-cols-7 gap-3 text-center \">\n                {getDaysInMonth(currentMonth).map((dayInfo, idx) => (\n                  <div key={idx} className=\"\">\n                    {dayInfo ? (\n                      <button\n                        className={` flex items-center justify-center rounded-md \n        ${availableDates.includes(dayInfo.dateString) ? \"font-bold\" : \"\"} \n${\n  selectedDate && dayInfo.date.toDateString() === selectedDate.toDateString()\n    ? \"bg-[#5FD4D0] text-white\" // Selected state\n    : \"hover:bg-red-500 hover:text-red-500\" // Using Tailwind's predefined red color\n}\n        ${!availableDates.includes(dayInfo.dateString) ? \"opacity-50 cursor-not-allowed\" : \"\"}`}\n                        onClick={() =>\n                          dayInfo &&\n                          availableDates.includes(dayInfo.dateString) &&\n                          handleDateClick(dayInfo.date)\n                        }\n                      >\n                        <span className=\"border p-[2.5px] border-[#d9d9d9] rounded-md text-[13px]  hover:bg-[#d9d9d9] hover:text-[black] min-w-7\">\n                          {dayInfo.date.getDate()}\n                        </span>\n                      </button>\n                    ) : (\n                      <span className=\"text-[red]\">&nbsp;</span>\n                    )}\n                  </div>\n                ))}\n              </div>\n\n              <h2 className=\"text-lg font-semibold mt-4 mb-2\">Select Time</h2>\n              <div className=\"space-y-4\">\n                {isLoadingTimeSlots ? (\n                  <div className=\"text-center py-4\">\n                    Loading available times...\n                  </div>\n                ) : (\n                  <div className=\"grid grid-cols-2 gap-3\">\n                    {availableTimeSlots.map((slot) => (\n                      <button\n                        key={slot.id}\n                        onClick={() => handleTimeSelection(slot.time, slot.id)}\n                        className={`w-full p-2 text-sm rounded-lg transition-colors duration-200\n                ${selectedTime === slot.time ? \"bg-[#5FD4D0] text-white\" : \"border border-gray-300 bg-white text-gray-700 hover:bg-gray-100\"}`}\n                      >\n                        {slot.time}\n                      </button>\n                    ))}\n                  </div>\n                )}\n                {!isLoadingTimeSlots &&\n                  availableTimeSlots.length === 0 &&\n                  selectedDate && (\n                    <p className=\"text-center text-gray-500\">\n                      No available time slots for this date. Kindly select\n                      another date\n                    </p>\n                  )}\n              </div>\n            </div>\n          )}\n\n          {selectedDate &&\n            selectedTime &&\n            (isFirstVisit === true || selectedProcedure) && (\n              <div ref={personalInfoRef}>\n                <h2 className=\"text-lg font-semibold mb-2\">Your Information</h2>\n                <form onSubmit={handleSubmit} className=\"space-y-4\">\n                  <div>\n                    <label\n                      htmlFor=\"name\"\n                      className=\"block text-sm font-medium text-black\"\n                    >\n                      Name\n                    </label>\n                    <input\n                      id=\"name\"\n                      type=\"text\"\n                      value={firstName}\n                      onChange={(e) => setFirstName(e.target.value)}\n                      placeholder=\"Enter your name\"\n                      className=\"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\n                    />\n                  </div>\n                  <div>\n                    <label\n                      htmlFor=\"email\"\n                      className=\"block text-sm font-medium text-black\"\n                    >\n                      Email\n                    </label>\n                    <input\n                      id=\"email\"\n                      type=\"email\"\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                      placeholder=\"Enter your email\"\n                      className=\"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\n                    />\n                  </div>\n                  <div>\n                    <label\n                      htmlFor=\"mobile\"\n                      className=\"block text-sm font-medium text-black\"\n                    >\n                      Mobile Number\n                    </label>\n                    <input\n                      id=\"mobile\"\n                      type=\"text\"\n                      value={mobile}\n                      onChange={(e) =>\n                        setMobile(formatPhoneNumber(e.target.value))\n                      }\n                      placeholder=\"(123) 456-7890\"\n                      className=\"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\n                    />\n                  </div>\n\n                  {/* Real-time display of entered information */}\n                  <div className=\"mt-4 pt-4 text-black rounded\">\n                    <h3 className=\"text-lg  mb-2 font-semibold\">\n                      Your Appointment\n                    </h3>\n\n                    <p className=\"text-black\">\n                      Name: {firstName || \"Not provided\"}\n                    </p>\n                    <p>Email: {email || \"Not provided\"}</p>\n                    <p>Mobile Number: {mobile || \"Not provided\"}</p>\n                    {!isFirstVisit && (\n                      <>\n                        <p>Procedure: {selectedProcedure}</p>\n                        <p>Aesthetician: {selectedAesthetician}</p>\n                      </>\n                    )}\n                    <p>Date: {selectedDate?.toLocaleDateString()}</p>\n                    <p>Time: {selectedTime}</p>\n                  </div>\n                  <button\n                    type=\"submit\"\n                    className={`inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 h-10 px-4 py-2 w-full mt-4 bg-[#5FD4D0] hover:bg-[#5FD4D0]/90 text-white \n  ${!firstName || !email || !mobile ? \"disabled:opacity-50 disabled:cursor-not-allowed\" : \"\"}`}\n                    disabled={!firstName || !email || !mobile}\n                  >\n                    Schedule Now\n                  </button>\n                </form>\n              </div>\n            )}\n        </div>\n      </div>\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}